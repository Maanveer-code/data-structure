#include<stdio.h>
#define MAX 100
int stack[MAX],top1 = -1; top2 = MAX;
int isStack1Empty(){
    return (top1 == -1) ? 1 : 0;
}
int isStack2Empty(){
    return (top2 == MAX) ? 1 : 0;
}
int isStack1Full(){
    return(top1 == top2-1) ? 1 : 0;
}
int isStack2Full(){
    return(top2 == top1+1) ? 1 : 0;
}
void push_stack1(int data){
    if(isStack1Full())
        printf("Stack-1 Overflow !!!\n");
    else{
        stack[++top1]=data;
            printf("Element Added !!!\n");
    }
}
void push_stack2(int data){
    if(isStack2Full())
        printf("Stack-2 Overflow !!!\n");
    else{
        stack[--top2]=data;
            printf("Element Added !!!\n");
    }
}
void pop_stack1(){
    if(isStack1Empty())
        printf("Stack-1 Underflow !!!");
    else{
        int value;
        printf("Enter Value : ");
        scanf("%d",&value);
        value = stack[top1--];
        return value;
    }
}
void pop_stack2(){
    if(isStack1Empty())
        printf("Stack-2 Underflow !!!");
    else{
        int value;
        printf("Enter Value : ");
        scanf("%d",&value);
        value = stack[top2++];
        return value;
    }
}
void peek_stack1(){
            if(isStack1Empty())
            {
                printf("Stack is Empty!!!\n");
            }
            else{
                return stack[top1];
            }
}
void peek_stack2(){
    if(isStack2Empty())
    {
        printf("Stack is Empty!!!\n");
    }
    else{
        return stack[top2];
    }
}
void show_stack1(){                    
        if(isEmpty()){                
                printf("Stack is Empty!!!\n");  
            }
            else{
                int i;
                for(int i=top1;i>=0;i--){
                    printf("%d\n", stack[i]);
                }
            }
    }
    void show_stack2(){                    
        if(isEmpty()){                
                printf("Stack is Empty!!!\n");  
            }
            else{
                int i;
                for(int i=top2;i>=0;i--){
                    printf("%d\n", stack[i]);
            }
        }
    }
int main()
{
    
}
